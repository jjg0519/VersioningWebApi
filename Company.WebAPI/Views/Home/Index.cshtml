@using Company.WebAPI.Core.Common

@{
    ViewBag.Title = "Eit WebAPI";

}

@section Styles {

    <link rel="icon" type="image/png" href="/swagger/ui/images/favicon-32x32-png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/swagger/ui/images/favicon-16x16-png" sizes="16x16" />
    <link href='/swagger/ui/css/typography-css' media='screen' rel='stylesheet' type='text/css' />
    <link href='/swagger/ui/css/reset-css' media='screen' rel='stylesheet' type='text/css' />
    <link href='/swagger/ui/css/screen-css' media='screen' rel='stylesheet' type='text/css' />
    <link href='/swagger/ui/css/reset-css' media='print' rel='stylesheet' type='text/css' />
    <link href='/swagger/ui/css/print-css' media='print' rel='stylesheet' type='text/css' />
    <link href="/Content/Swagger.css" rel="stylesheet" />
}

@section HeadScripts {

    <script src='/swagger/ui/lib/object-assign-pollyfill-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/jquery-1-8-0-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/jquery-slideto-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/jquery-wiggle-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/jquery-ba-bbq-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/handlebars-4-0-5-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/lodash-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/backbone-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/highlight-9-1-0-pack-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/highlight-9-1-0-pack_extended-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/jsoneditor-min-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/marked-js' type='text/javascript'></script>
    <script src='/swagger/ui/lib/swagger-oauth-js' type='text/javascript'></script>
    <script src='/swagger/ui/swagger-ui-min-js' type='text/javascript'></script>

}

@section Scripts {

    <script type="text/javascript">
        $(function () {

            // Get Swashbuckle config into JavaScript
            function arrayFrom(configString) {
                return (configString !== "") ? configString.split('|') : [];
            }

            function stringOrNullFrom(configString) {
                return (configString !== "null") ? configString : null;
            }

            window.swashbuckleConfig = {
                rootUrl: '@(string.Format("{0}://{1}", Request.Url.Scheme, Request.Url.Authority))',
                discoveryPaths: arrayFrom('swagger/docs/api'),
                booleanValues: arrayFrom('true|false'),
                validatorUrl: stringOrNullFrom(''),
                customScripts: arrayFrom(''),
                docExpansion: 'none',
                supportedSubmitMethods: arrayFrom('get|put|post|delete|options|head|patch'),
                oAuth2Enabled: ('false' == 'true'),
                oAuth2ClientId: '',
                oAuth2ClientSecret: '',
                oAuth2Realm: '',
                oAuth2AppName: '',
                oAuth2ScopeSeperator: ' ',
                oAuth2AdditionalQueryStringParams: JSON.parse('{}'),
                apiKeyName: 'api_key',
                apiKeyIn: 'query'
            };

            hljs.configure({
                highlightSizeThreshold: 5000
            });

            // Pre load translate...
            if (window.SwaggerTranslator) {
                window.SwaggerTranslator.translate();
            }
            window.swaggerUi = new SwaggerUi({
                url: swashbuckleConfig.rootUrl + "/" + swashbuckleConfig.discoveryPaths[0],
                dom_id: "swagger-ui-container",
                booleanValues: swashbuckleConfig.booleanValues,
                supportedSubmitMethods: swashbuckleConfig.supportedSubmitMethods,
                onComplete: function (swaggerApi, swaggerUi) {
                    if (typeof initOAuth == "function" && swashbuckleConfig.oAuth2Enabled) {
                        initOAuth({
                            clientId: swashbuckleConfig.oAuth2ClientId,
                            clientSecret: swashbuckleConfig.oAuth2ClientSecret,
                            realm: swashbuckleConfig.oAuth2Realm,
                            appName: swashbuckleConfig.oAuth2AppName,
                            scopeSeparator: swashbuckleConfig.oAuth2ScopeSeperator,
                            additionalQueryStringParams: swashbuckleConfig.oAuth2AdditionalQueryStringParams
                        });
                    }

                    if (window.SwaggerTranslator) {
                        window.SwaggerTranslator.translate();
                    }

                    window.swaggerApi = swaggerApi;
                    _.each(swashbuckleConfig.customScripts, function (script) {
                        $.getScript(script);
                    });

                    $('#VersionSelector').change(function (e) {
                        $('input[name="version"]').val('v' + e.target.value).attr('disabled', 'disabled');
                    }).trigger('change');
                },
                onFailure: function (data) {
                    log("Unable to Load SwaggerUI");
                },
                docExpansion: swashbuckleConfig.docExpansion,
                jsonEditor: false,
                apisSorter: null, // default to server
                defaultModelRendering: 'schema',
                showRequestHeaders: false,
                oauth2RedirectUrl: window.location.href.replace('index', 'o2c-html').split('#')[0]
            });

            if (window.swashbuckleConfig.validatorUrl !== '')
                window.swaggerUi.options.validatorUrl = window.swashbuckleConfig.validatorUrl;

            window.swaggerUi.load();

            function log() {
                if ('console' in window) {
                    console.log.apply(console, arguments);
                }
            }


            
        });
    </script>
}

<div class="swagger-section">
    <div id='header'>
        <div class="swagger-ui-wrap">
            <a id="logo"><span class="logo__title">Eit API Reference</span></a>
            @Html.DropDownList(AppSettingConfig.SYS_DefaultVersion,
                AppSettingConfig.SYS_SupportedVersions.Select(v => new SelectListItem() { Text = v, Value = v, Selected = (v == AppSettingConfig.SYS_DefaultVersion) }),
                new { id = "VersionSelector" })
        </div>
    </div>

    <div id="message-bar" class="swagger-ui-wrap" data-sw-translate>&nbsp;</div>
    <div id="swagger-ui-container" class="swagger-ui-wrap"></div>
</div>
